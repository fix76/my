<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TopUtils</name>
    </assembly>
    <members>
        <member name="T:TopUtils.AccountManager.Account">
            <summary>
            Аккаунт
            </summary>
        </member>
        <member name="P:TopUtils.AccountManager.Account.Id">
            <summary>
            Id аккаунта
            </summary>
        </member>
        <member name="P:TopUtils.AccountManager.Account.Login">
            <summary>
            Логин
            </summary>
        </member>
        <member name="P:TopUtils.AccountManager.Account.Password">
            <summary>
            Пароль
            </summary>
        </member>
        <member name="P:TopUtils.AccountManager.Account.Order">
            <summary>
            Приоритет выполнения.  
            </summary>
        </member>
        <member name="P:TopUtils.AccountManager.Account.IsBusy">
            <summary>
            Возвращает true, если аккаунт уже занят другим потоком.
            </summary>
        </member>
        <member name="P:TopUtils.AccountManager.Account.IsMissed">
            <summary>
            Возвращает true, если аккаунт запрещено брать для работы.
            Нужно для ручного отключения аккаунтов пользователем в конфигурации.
            </summary>
        </member>
        <member name="P:TopUtils.AccountManager.Account.LastExecution">
            <summary>   
            Время последнего запуска
            </summary>
        </member>
        <member name="P:TopUtils.AccountManager.Account.Data">
            <summary>
            Набор пользовательских данных.
            </summary>
        </member>
        <member name="P:TopUtils.AccountManager.Account.LastExecutionString">
            <summary>
            Время последнего запуска в формате строки.
            Нужно для сериализации.
            </summary>
        </member>
        <member name="M:TopUtils.AccountManager.Account.Release">
            <summary>
            Помечает данный аккаунт как доступный для использования другими потоками.
            </summary>
        </member>
        <member name="M:TopUtils.AccountManager.Account.SetProxy(System.String,System.Int32)">
            <summary>
            Устанавливает прокси для аккаунта
            </summary>
            <param name="proxyString">Строка прокси</param>
            <param name="maxAccountsWithSameProxy">Максимальное количество аккаунтов с указанным прокси</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.AccountManager.Account.GetProxy">
            <summary>
            Возвращает прокси текущего аккаунта
            </summary>
            <returns></returns>
        </member>
        <member name="T:TopUtils.AccountManager.XmlConfig">
            <summary>
            Адаптер конфигурации Xml
            </summary>
        </member>
        <member name="M:TopUtils.AccountManager.XmlConfig.#ctor(System.String,System.Collections.Generic.IEnumerable{TopUtils.AccountManager.Account})">
            <inheritdoc />
        </member>
        <member name="P:TopUtils.AccountManager.XmlConfig.Path">
            <inheritdoc />
        </member>
        <member name="M:TopUtils.AccountManager.XmlConfig.GetAllAccounts">
            <inheritdoc />
        </member>
        <member name="M:TopUtils.AccountManager.XmlConfig.AddOrUpdate(TopUtils.AccountManager.Account)">
            <inheritdoc />
        </member>
        <member name="M:TopUtils.AccountManager.XmlConfig.AddOrUpdateAll(System.Collections.Generic.IEnumerable{TopUtils.AccountManager.Account})">
            <inheritdoc />
        </member>
        <member name="T:TopUtils.AccountManager.IConfig">
            <summary>
            Конфигурация
            </summary>
        </member>
        <member name="P:TopUtils.AccountManager.IConfig.Path">
            <summary>
            Путь к файлу конфигурации
            </summary>
        </member>
        <member name="M:TopUtils.AccountManager.IConfig.GetAllAccounts">
            <summary>
            Считывает все аккаунты из конфигурации
            </summary>
            <returns></returns>
        </member>
        <member name="M:TopUtils.AccountManager.IConfig.AddOrUpdate(TopUtils.AccountManager.Account)">
            <summary>
            Добавляет новый или обновляет существующий аккаунт в конфигурации
            </summary>
            <param name="account"></param>
        </member>
        <member name="M:TopUtils.AccountManager.IConfig.AddOrUpdateAll(System.Collections.Generic.IEnumerable{TopUtils.AccountManager.Account})">
            <summary>
            Добавляет новые или обновляет существующие аккаунты в конфигурации
            </summary>
            <param name="accounts"></param>
        </member>
        <member name="T:TopUtils.AccountManager.AccountManager">
            <summary>
            Менеджер аккаунтов.
            </summary>
            <remarks>Функционал многопоточной работы со списком аккаунтов.</remarks>
        </member>
        <member name="P:TopUtils.AccountManager.AccountManager.AccountsPath">
            <summary>   
            Путь к файлу с аккаунтами.
            </summary>
        </member>
        <member name="P:TopUtils.AccountManager.AccountManager.ConfigPath">
            <summary>
            Путь к файлу с конфигурацией.
            </summary>
        </member>
        <member name="P:TopUtils.AccountManager.AccountManager.Config">
            <summary>
            Адаптер конфигурации.
            </summary>
        </member>
        <member name="M:TopUtils.AccountManager.AccountManager.GetInstance">
            <summary>
            Возвращает экземпляр класса AccountManager.
            </summary>
            <returns>Экземпляр AccountManager.</returns>
            <example>
            var manager = AccountManager.GetInstance();
            </example>
        </member>
        <member name="M:TopUtils.AccountManager.AccountManager.Initialize(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Производит инициализацию менеджера аккаунтов.
            Сопоставляет существующую конфигурацию аккаунтов или создает новую для файла с аккаунтами.
            </summary>
            <param name="accountsPath">Путь к файлу с аккаунтами.</param>
            <param name="configPath">Путь к файлу с конфигурацией.</param>
            <param name="accountStringSeparator">Разделитель для строки аккаунта.</param>
            <param name="removeObsoleteAccountsInConfig">Если true, то из конфигурации удаляются аккаунты, которых нет в файле аккаунтов.</param>
            <returns>Экземпляр AccountManager.</returns>
            <example>
            string accountsPath = @"C:\accounts.txt";
            string configPath = accountsPath + ".config.xml";
            var manager = AccountManager.GetInstance();
            manager.Initialize(accountsPath, configPath);
            </example>
        </member>
        <member name="M:TopUtils.AccountManager.AccountManager.GetFreeAccountWithMinExecutionsCount(System.Boolean,System.String)">
            <summary>
            Возвращает свободный аккаунт с наименьшим количеством запусков.
            </summary>
            <param name="throwExceptionIfNoFreeAccounts">Если true и все аккаунты заняты, то метод выбросит исключение.</param>
            <param name="exceptionMessage">Сообщение исключения</param>
            <returns>Аккаунт.</returns>
            <example>
            var account = manager.GetFreeAccountWithMinExecutionsCount();
                
            if (account == null)
                project.SendInfoToLog("Все аккаунты заняты", true); 
                
            project.SendInfoToLog("Логин: " + account.Login, true); 
            project.SendInfoToLog("Пароль: " + account.Password, true); 
            </example>
        </member>
        <member name="M:TopUtils.AccountManager.AccountManager.GetAccount(System.Predicate{TopUtils.AccountManager.Account},System.Boolean,System.String)">
            <summary>
            Возвращает аккаунт, удовлетворяющий предикату.
            </summary>
            <param name="predicate">Предикат.</param>
            <param name="throwExceptionIfNoFreeAccounts">Если true и все аккаунты заняты, то метод выбросит исключение.</param>
            <param name="exceptionMessage">Сообщение исключения</param>
            <returns>Аккаунт.</returns>
            <example>
            var account = manager.GetAccount(
            account => !account.IsBusy 
            &amp;&amp; !account.IsMissed 
            &amp;&amp; DateTime.Now - account.LastExecution > TimeSpan.FromHours(12)); 
            </example>
        </member>
        <member name="M:TopUtils.AccountManager.AccountManager.ReleaseAccounts(System.Predicate{TopUtils.AccountManager.Account})">
            <summary>
            Освобождает все аккаунты для которых предикат возвращает true.
            </summary>
            <param name="predicate">Предикат.</param>
            <example>
            string accountsPath = @"C:\accounts.txt";
            string configPath = accountsPath + ".config.xml";
            var manager = AccountManager.GetInstance();
            manager.Initialize(accountsPath, configPath);
            manager.ReleaseAccounts(account =>
            !account.IsBusy                                                   
            &amp;&amp; DateTime.Now - account.LastExecution > TimeSpan.FromHours(1)); 
            </example>
        </member>
        <member name="T:TopUtils.AccountManager.Accounts">
            <inheritdoc />
            <summary>
                Коллекция аккаунтов
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.ZennoConfigurator">
            <summary>
            Вспомогательный класс для выполнения настройки различных параметров браузера ZennoPoster'а.
            </summary>
        </member>
        <member name="M:TopUtils.BrowserManager.ZennoConfigurator.#ctor(ZennoLab.CommandCenter.Instance,ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel)">
            <summary>
            Конструктор.
            </summary>
            <param name="instance">Экземпляр <see cref="T:ZennoLab.CommandCenter.Instance"/>.</param>
            <param name="project">Экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel"/>.</param>
        </member>
        <member name="M:TopUtils.BrowserManager.ZennoConfigurator.Configure(TopUtils.BrowserManager.Model.Profile)">
            <summary>
            Настраивает параметры браузера ZennoPoster'а в соответствии со значениями профиля браузера.
            </summary>
            <param name="profile">Профиль браузера.</param>
            <exception cref="T:System.ArgumentNullException">Передан пустой объект profile.</exception>
        </member>
        <member name="M:TopUtils.BrowserManager.ZennoConfigurator.SetNavigatorFields(TopUtils.BrowserManager.Model.Navigator)">
            <summary>
            Устанавливает соответсвующие поля навигатора.
            </summary>
            <param name="navigator">Объект навигатора.</param>
            <exception cref="T:System.ArgumentNullException">Передан пустой объект navigator.</exception>
        </member>
        <member name="M:TopUtils.BrowserManager.ZennoConfigurator.SetScreenSettings(TopUtils.BrowserManager.Model.ScreenSettings)">
            <summary>
            Устанавливает соответствующие параметры экрана.
            </summary>
            <param name="settings">Информация о параметрах экрана.</param>
            <exception cref="T:System.ArgumentNullException">Передан пустой объект settings.</exception>
        </member>
        <member name="M:TopUtils.BrowserManager.ZennoConfigurator.SetBrowserSettings(TopUtils.BrowserManager.Model.BrowserSettings)">
            <summary>
            Устанавливает соответствующие параметры браузера.
            </summary>
            <param name="settings">Параметры браузера.</param>
            <exception cref="T:System.ArgumentNullException">Передан пустой объект settings.</exception>
        </member>
        <member name="M:TopUtils.BrowserManager.ZennoConfigurator.HideAllPlugins">
            <summary>
            Скрыть все плагины.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.ZennoConfigurator.ShowAllPlugins">
            <summary>
            Показать все плагины.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.ZennoConfigurator.SetDoNotTrack(System.Nullable{System.Boolean})">
            <summary>
            Устанавливает параметр запрета отслеживания сайтами.
            </summary>
            <param name="doNotTrack">Запретить отслеживать: true / false / null.</param>
        </member>
        <member name="T:TopUtils.BrowserManager.Generation.Data.Browsers.GoogleChromeData">
            <summary>
            Данные браузера Google Chrome.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Data.Browsers.GoogleChromeData.Type">
            <inheritdoc />
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Data.Browsers.GoogleChromeData.Versions">
            <inheritdoc />
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Data.Browsers.GoogleChromeData.Devices">
            <inheritdoc />
        </member>
        <member name="T:TopUtils.BrowserManager.Generation.Data.Browsers.MozillaFirefoxData">
            <summary>
            Данные браузера Mozilla Firefox.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Data.Browsers.MozillaFirefoxData.Type">
            <inheritdoc />
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Data.Browsers.MozillaFirefoxData.Versions">
            <inheritdoc />
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Data.Browsers.MozillaFirefoxData.Devices">
            <inheritdoc />
        </member>
        <member name="T:TopUtils.BrowserManager.Generation.Data.Devices.WindowsData">
            <summary>
            Данные устройства на платформе Windows.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Data.Devices.WindowsData.Type">
            <inheritdoc />
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Data.Devices.WindowsData.Versions">
            <inheritdoc />
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Data.Devices.WindowsData.ScreenResolutions">
            <inheritdoc />
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Data.Devices.WindowsData.Platforms">
            <inheritdoc />
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Data.Devices.WindowsData.HardwareConcurrency">
            <inheritdoc />
        </member>
        <member name="T:TopUtils.BrowserManager.Generation.Navigator.ChromeNavigatorBuilder">
            <summary>
            Создает и заполняет <see cref="N:TopUtils.BrowserManager.Generation.Navigator"/> для Google Chrome.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:TopUtils.BrowserManager.Generation.Navigator.ChromeNavigatorBuilder.Build(System.String,TopUtils.BrowserManager.Model.BrowserInfo,TopUtils.BrowserManager.Model.DeviceInfo)">
            <inheritdoc />
        </member>
        <member name="T:TopUtils.BrowserManager.Generation.Navigator.FirefoxNavigatorBuilder">
            <summary>
            Создает и заполняет <see cref="N:TopUtils.BrowserManager.Generation.Navigator"/> для Mozilla Firefox.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:TopUtils.BrowserManager.Generation.Navigator.FirefoxNavigatorBuilder.Build(System.String,TopUtils.BrowserManager.Model.BrowserInfo,TopUtils.BrowserManager.Model.DeviceInfo)">
            <inheritdoc />
        </member>
        <member name="T:TopUtils.BrowserManager.Generation.Navigator.NavigatorBuilder">
            <summary>
            Создает и заполняет <see cref="P:TopUtils.BrowserManager.Generation.Navigator.NavigatorBuilder.Navigator"/>.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Navigator.NavigatorBuilder.Navigator">
            <summary>
            Навигатор.
            </summary>
        </member>
        <member name="M:TopUtils.BrowserManager.Generation.Navigator.NavigatorBuilder.Build(System.String,TopUtils.BrowserManager.Model.BrowserInfo,TopUtils.BrowserManager.Model.DeviceInfo)">
            <summary>
            Создает и заполняет навигатор.
            </summary>
            <param name="acceptLanguage">Строка acceptLanguage.</param>
            <param name="browserInfo">Информация о браузере.</param>
            <param name="deviceInfo">Информация об устройстве, на котором работает браузер.</param>
        </member>
        <member name="T:TopUtils.BrowserManager.Generation.ProfileBuilder">
            <summary>
            Создает и заполняет профиль браузера.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.ProfileBuilder.Profile">
            <summary>
            Профиль браузера.
            </summary>
        </member>
        <member name="M:TopUtils.BrowserManager.Generation.ProfileBuilder.SetRules(TopUtils.BrowserManager.GenerationRules)">
            <summary>
            Задает правила генерации профиля браузера.
            </summary>
            <param name="rules"></param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.Generation.ProfileBuilder.SetBrowser(TopUtils.BrowserManager.Interfaces.IBrowserData)">
            <summary>
            Устанавливает данные браузера для заполнения профиля.
            </summary>
            <param name="browserData">Данные браузера.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.Generation.ProfileBuilder.SetDevice(TopUtils.BrowserManager.Interfaces.IDeviceData)">
            <summary>
            Устанавливает данные устройства для заполнения профиля.
            </summary>
            <param name="deviceData">Данные устройства.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.Generation.ProfileBuilder.Build">
            <summary>
            Заполняет профиль браузера.
            </summary>
            <returns></returns>
        </member>
        <member name="T:TopUtils.BrowserManager.Generation.ScreenGenerator">
            <summary>
            Предоставляет методы генерации параметров экрана.
            </summary>
        </member>
        <member name="M:TopUtils.BrowserManager.Generation.ScreenGenerator.Generate(TopUtils.BrowserManager.Generation.Rules.ScreenGenerationRules,TopUtils.BrowserManager.Interfaces.IDeviceData)">
            <summary>
            Возвращает случайно заполненные параметры экрана.
            </summary>
            <param name="rules">Правила генерации параметров экрана.</param>
            <param name="deviceData">Данные устройства.</param>
            <returns></returns>
        </member>
        <member name="T:TopUtils.BrowserManager.Generation.Rules.ScreenGenerationRules">
            <summary>
            Правила генерации параметров экрана.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.ScreenGenerationRules.UseScreenResolutionGeneration">
            <summary>
            Генерировать разрешение экрана.
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolRules.True | BoolRules.False.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.ScreenGenerationRules.UseScreenAvailAreaGeneration">
            <summary>
            Генерировать размер видимой области.
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolRules.True | BoolRules.False.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.ScreenGenerationRules.UseColorDepthGeneration">
            <summary>
            Генерировать глубину цвета.
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolRules.True | BoolRules.False.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.ScreenGenerationRules.UsePageScaleGeneration">
            <summary>
            Генерировать соотношение пикселя к устройству (отношение физического пикселя к виртуальному).
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolRules.True | BoolRules.False.
            </summary>
            TODO: Удалить. Устанавливается для конкретного Tab'а.
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.ScreenGenerationRules.UseTouchscreen">
            <summary>
            Правила генерации свойства "Использовать сенсорный экран".
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolRules.True | BoolRules.False.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Generation.Rules.NavigatorGenerationRules">
            <summary>
            Правила генерации UserAgent'а.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.NavigatorGenerationRules.GenerateHardwareConcurrency">
            <summary>
            Правила генерации свойства "Отображать количество ядер процессора".
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolRules.True | BoolRules.False.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Generation.Rules.SettingsGenerationRules">
            <summary>
            Правила генерации параметров браузера.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.SettingsGenerationRules.UseJavaScript">
            <summary>
            Правила генерации свойства "Разрешить использовать JavaScript. По умолчанию true".
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolFilter.True | BoolFilter.False.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.SettingsGenerationRules.UseAddBlock">
            <summary>
            Правила генерации свойства "Убрать рекламу".
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolFilter.True | BoolFilter.False.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.SettingsGenerationRules.UseWebStorage">
            <summary>
            Правила генерации свойства "Разрешить использовать веб-хранилища (LocalStorage, SessionStorage, Global Storage, Database Storage via SQLite). По умолчанию true".
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolFilter.True | BoolFilter.False.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.SettingsGenerationRules.UseIndexedDb">
            <summary>
            Правила генерации свойства "Разрешить использовать базу данных браузера IndexedDB. По умолчанию true".
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolFilter.True | BoolFilter.False.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.SettingsGenerationRules.UseWebGL">
            <summary>
            Правила генерации свойства "Разрешить использовать WebGL".
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolFilter.True | BoolFilter.False.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.SettingsGenerationRules.UsePlugins">
            <summary>
            Правила генерации свойства "Использовать плагины, по умолчанию true. Если установить false, будут отключены Flash, Java, Silverlight".
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolFilter.True | BoolFilter.False.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.SettingsGenerationRules.HidePlugins">
            <summary>
            Правила генерации свойства "Скрывать плагины без отключения Flash, Java, Silverlight".
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolFilter.True | BoolFilter.False.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.SettingsGenerationRules.DoNotTrack">
            <summary>
            Правила генерации свойства "Оповещать сайты о нежелании быть отслеженным. По умолчанию true".
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BoolFilter.True | BoolFilter.False.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.SettingsGenerationRules.TimeZoneWorkMode">
            <summary>
            Правила генерации использования подмены часового пояса.
            Если используется Emulate, необходимо также задать соответствующие параметры времени на сгенерированном объекте отпечатка браузера.
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            TimeZoneWorkMode.Emulate | TimeZoneWorkMode.Default.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.SettingsGenerationRules.WebRTCWorkMode">
            <summary>
            Правила генерации режима работы WebRTC.
            Если используется Emulate, необходимо также задать соответствующие параметры адресов на сгенерированном объекте отпечатка браузера.
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            WebRTCMode.Emulate | WebRTCMode.Enable.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Generation.Rules.SettingsGenerationRules.CanvasRenderMode">
            <summary>
            Правила генерации режима работы Canvas.
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            CanvasWorkMode.Emulate | CanvasWorkMode.Block.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.BrowserInfo">
            <summary>
            Информация о браузере.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserInfo.Type">
            <summary>
            Тип браузера.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserInfo.Version">
            <summary>
            Версия браузера.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserInfo.Build">
            <summary>
            Номер сборки браузера.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserInfo.Platform">
            <summary>
            Платформа браузера (например, Win32, Win64).
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.HttpHeaders">
            <summary>
            Содержит свойства HTTP заголовков.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/docs/Web/HTTP/Headers"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.HttpHeaders.UserAgent">
            <summary>
            UserAgent браузера.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/docs/Web/HTTP/Headers/User-Agent"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.HttpHeaders.AcceptLanguage">
            <summary>
            Предпочтитаемый пользователем язык.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/docs/Web/HTTP/Headers/Accept-Language"/>
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.Navigator">
            <summary>
            Содержит свойства, идентифицирующие UserAgent.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.BuildId">
            <summary>
            Идентификатор сборки браузера.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/API/UserAgent/buildID"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.AppCodeName">
            <summary>
            Внутреннее имя браузера. Все браузеры возвращают Mozilla.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/API/NavigatorID/appCodeName"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.AppName">
            <summary>
            Официальное название браузера. В большинстве браузеров (Firefox, как, Chrome, Safari, Opera и Internet Explorer) возвращаемой
            строкой будет 'Netscape'.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/API/NavigatorID/appName"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.AppVersion">
            <summary>
            Версия браузера. Это может быть либо обычный номер версии, например, '5.0' или номер версии с более 
            детальной информацией.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/API/NavigatorID/appVersion"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.Platform">
            <summary>
            Платформа браузера.<para/>
            Пример: "MacIntel", "Win32", "FreeBSD i386", "WebTV OS".
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/API/NavigatorID/platform"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.Product">
            <summary>
            Имя продукта текущего браузера. Всегда возвращает 'Gecko'.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/API/NavigatorID/product"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.UserAgent">
            <summary>
            Пользовательский агент браузера.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/User-Agent"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.ProductSub">
            <summary>
            Номер сборки браузера.
            <para> </para>
            В Apple Safari и Google Chrome это свойство всегда возвращается 20030107.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/API/UserAgent/productSub"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.OsCpu">
            <summary>
            Строка, идентифицирующая операционную систему.<para/>
            Пример: Windows NT 5.0;
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/API/UserAgent/oscpu"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.AcceptLanguage">
            <summary>
            Предпочтитаемый пользователем язык.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/HTTP/Headers/Accept-Language"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.BrowserLanguage">
            <summary>
            Язык браузера.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/API/NavigatorLanguage/language"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.Language">
            <summary>
            Язык пользовательского интерфейса.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/API/NavigatorLanguage/language"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.Vendor">
            <summary>
            Имя поставщика браузера.
            <para> </para>
            Подробнее: <seealso cref="!:https://developer.mozilla.org/ru/docs/Web/API/Navigator/vendor"/>
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Navigator.HardwareConcurrency">
            <summary>
            Колчество логических процессоров.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.Filters.Language">
            <summary>
            Язык.
            </summary>
            <inheritdoc />
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.Language.English">
            <summary>
            Английский.
            </summary>
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.Language.Russian">
            <summary>
            Русский.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.Filters.CanvasWorkMode">
            <summary>
            Режим работы Canvas.
            </summary>
            <inheritdoc />
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.CanvasWorkMode.Allow">
            <summary>
            Разрешить использование.
            </summary>
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.CanvasWorkMode.Block">
            <summary>
            Запретить использование.
            </summary>
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.CanvasWorkMode.Emulate">
            <summary>
            Эмулировать.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.Filters.WebRTCMode">
            <summary>
            Режим работы WebRTC.
            </summary>
            <inheritdoc />
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.WebRTCMode.Disable">
            <summary>
            Выключен.
            </summary>
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.WebRTCMode.Emulate">
            <summary>
            Включен с подменой адреса.
            </summary>
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.WebRTCMode.Enable">
            <summary>
            Включен.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.Filters.TimeZoneMode">
            <summary>
            Способ получения часового пояса.
            </summary>
            <inheritdoc />
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.TimeZoneMode.Default">
            <summary>
            Использовать стандартный часовой пояс системы.
            </summary>
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.TimeZoneMode.Emulate">
            <summary>
            Подменять часовой пояс.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.Filters.BoolFilter">
            <summary>
            Правила для генерации логических свойств.
            </summary>
            <inheritdoc />
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.BoolFilter.True">
            <summary>
            Использовать генерацию.
            </summary>
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.BoolFilter.False">
            <summary>
            Не использовать генерацию.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.Filters.BrowserType">
            <summary>
            Тип браузера.
            </summary>
            <inheritdoc />
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.BrowserType.MozillaFirefox">
            <summary>
            Mozilla Firefox.
            </summary>
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.BrowserType.GoogleChrome">
            <summary>
            Google Chrome
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.Filters.DeviceType">
            <summary>
            Тип устройства.
            </summary>
            <inheritdoc />
        </member>
        <member name="F:TopUtils.BrowserManager.Model.Filters.DeviceType.Windows">
            <summary>
            Устройство на платформе Windows.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.Filters.MultivaluedFilter`1">
            <summary>
            Фильтр, хранящий несколько значений и представляющий их в виде набора строковых представлений каждого возможного значения фильтра.
            Аналог enum с атрибутом [Flags], типобезопасен.
            </summary>
            <typeparam name="TFilter">Непосредственно наследник</typeparam>
            <inheritdoc />
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Filters.MultivaluedFilter`1.#ctor">
            <summary>
            Аналог enum с атрибутом [Flags], типобезопасен.
            </summary>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Filters.MultivaluedFilter`1.op_Equality(TopUtils.BrowserManager.Model.Filters.MultivaluedFilter{`0},TopUtils.BrowserManager.Model.Filters.MultivaluedFilter{`0})">
            <summary>
            Реализация оператора ==.
            </summary>
            <param name="left">Левая часть.</param>
            <param name="right">Правая часть.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Filters.MultivaluedFilter`1.op_Inequality(TopUtils.BrowserManager.Model.Filters.MultivaluedFilter{`0},TopUtils.BrowserManager.Model.Filters.MultivaluedFilter{`0})">
            <summary>
            Реализация оператора !=.
            </summary>
            <param name="left">Левая часть.</param>
            <param name="right">Правая часть.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Filters.MultivaluedFilter`1.RegisterPossibleValue(System.String)">
            <summary>
            Регистрирует возможное значение.
            </summary>
            <param name="value">Значение.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Filters.MultivaluedFilter`1.GetRandom">
            <summary>
            Получить случайный элемент из зарегистрированных.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Filters.MultivaluedFilter`1.ToString">
            <summary>
            Преобразовать в строку.
            </summary>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Filters.MultivaluedFilter`1.op_BitwiseOr(TopUtils.BrowserManager.Model.Filters.MultivaluedFilter{`0},TopUtils.BrowserManager.Model.Filters.MultivaluedFilter{`0})">
            <summary>
            Объединяет наборы фильтров.
            </summary>
            <param name="a">Первый набор фильтров.</param>
            <param name="b">Второй набор фильтров.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Filters.MultivaluedFilter`1.Equals(TopUtils.BrowserManager.Model.Filters.MultivaluedFilter{`0})">
            <summary>
            Определяет, равен ли заданный объект текущему объекту.
            </summary>
            <param name="obj">Объект, который требуется сравнить с текущим объектом.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Filters.MultivaluedFilter`1.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Filters.MultivaluedFilter`1.GetHashCode">
            <inheritdoc />
        </member>
        <member name="T:TopUtils.BrowserManager.Model.BrowserSettings">
            <summary>
            Параметры браузера.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserSettings.UseJavaScript">
            <summary>
            Разрешить использовать JavaScript. По умолчанию true.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserSettings.UseAddBlock">
            <summary>
            Убрать рекламу.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserSettings.UseWebStorage">
            <summary>
            Разрешить использовать веб-хранилища (LocalStorage, SessionStorage, Global Storage, Database Storage via SQLite). По умолчанию true.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserSettings.UseIndexedDb">
            <summary>
            Разрешить использовать базу данных браузера IndexedDB. По умолчанию true.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserSettings.UseWebGL">
            <summary>
            Разрешить использовать WebGL.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserSettings.UsePlugins">
            <summary>
            Использовать плагины, по умолчанию true. Если установить false, будут отключены Flash, Java, Silverlight.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserSettings.HidePlugins">
            <summary>
            Скрывать плагины без отключения Flash, Java, Silverlight.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserSettings.Plugins">
            <summary>
            Список плагинов.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserSettings.DoNotTrack">
            <summary>
            Оповещать сайты о нежелании быть отслеженным. По умолчанию null.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserSettings.TimeZone">
            <summary>
            Параметры часового пояса.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserSettings.WebRtc">
            <summary>
            Параметры WebRTC.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.BrowserSettings.CanvasRenderMode">
            <summary>
            Режим работы Canvas. По умолчанию Emulate.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.DeviceInfo">
            <summary>
            Информация об устройстве, на котором работает браузер.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.DeviceInfo.Type">
            <summary>
            Тип устройства (например, Windows, Mac, Linux или Android).
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.DeviceInfo.OsVersion">
            <summary>
            Версия операционной системы.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.DeviceInfo.OsPlatform">
            <summary>
            Платформа операционной системы.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.DeviceInfo.Screen">
            <summary>
            Информация о параметрах экрана.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.DeviceInfo.HardwareConcurrency">
            <summary>
            Количество логических процессоров.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.TouchscreenInfo">
            <summary>
            Параметры сенсорного экрана.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.TouchscreenInfo.UseTouchscreen">
            <summary>
            Использовать сенсорный экран.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.TouchscreenInfo.MaxTouchPoints">
            <summary>
            Максимально количество одновременных касаний.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.Plugin">
            <summary>
            Плагин браузера.
            </summary>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Plugin.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Плагин браузера.
            </summary>
            <param name="name">Название плагина.</param>
            <param name="fileName">Путь до dll файла с плагином.</param>
            <param name="description">Описание плагина.</param>
            <param name="version">Версия плагина.</param>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Plugin.Name">
            <summary>
            Название плагина.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Plugin.FileName">
            <summary>
            Путь до dll файла с плагином.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Plugin.Description">
            <summary>
            Описание плагина.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Plugin.Version">
            <summary>
            Версия плагина.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.ScreenSettings">
            <summary>
            Информация о параметрах экрана.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.ScreenSettings.Resolution">
            <summary>
            Разрешение экрана.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.ScreenSettings.AvailArea">
            <summary>
            Видимая область.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.ScreenSettings.ColorDepth">
            <summary>
            Глубина цвета.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.ScreenSettings.PageScale">
            <summary>
            Соотношение пикселя к устройству (отношение физического пикселя к виртуальному).
            </summary>
            TODO: Удалить. Устанавливается для конкретного Tab'а.
        </member>
        <member name="P:TopUtils.BrowserManager.Model.ScreenSettings.Touchscreen">
            <summary>
            Параметры сенсорного экрана.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.ScreenResolution">
            <summary>
            Разрешение экрана.
            </summary>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.ScreenResolution.#ctor(System.Int32,System.Int32)">
            <summary>
            Разрешение экрана.
            </summary>
            <param name="width">Ширина.</param>
            <param name="height">Высота.</param>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.ScreenResolution.Width">
            <summary>
            Ширина.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.ScreenResolution.Height">
            <summary>
            Высота.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.TimeZone">
            <summary>
            Параметры часового пояса.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.TimeZone.WorkMode">
            <summary>
            Способ получения часового пояса.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.TimeZone.Hourses">
            <summary>
            Часы. Используется, если WorkMode установален в Emulate.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.TimeZone.Minutes">
            <summary>
            Минуты. Используется, если WorkMode установален в Emulate.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.WebRtc">
            <summary>
            Параметры WebRTC.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.WebRtc.WorkMode">
            <summary>
            Режим работы WebRTC. По умолчанию Disable.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.WebRtc.IPv4Address">
            <summary>
            IPv4 адрес для подмены. Используется, если WorkMode установален в Emulate.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.WebRtc.IPv6Address">
            <summary>
            IPv6 адрес для подмены. Используется, если WorkMode установален в Emulate.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.WebRtc.IPv4Nat">
            <summary>
            IPv4 NAT для подмены. Используется, если WorkMode установален в Emulate.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Model.Profile">
            <summary>
            Профиль браузера.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Profile.Settings">
            <summary>
            Параметры браузера.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Profile.Screen">
            <summary>
            Параметры экрана.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Profile.Navigator">
            <summary>
            Содержит свойства, идентифицирующие UserAgent.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Profile.Cookie">
            <summary>
            Cookie.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Profile.SuperCookie">
            <summary>
            SuperCookie.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Profile.Fonts">
            <summary>
            Fonts.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Profile.IndexedDb">
            <summary>
            IndexedDb.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Profile.LocalStorage">
            <summary>
            LocalStorage.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Profile.WebRTCDevices">
            <summary>
            WebRTCDevices.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Model.Profile.Plugins">
            <summary>
            Plugins.
            </summary>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Profile.SaveJson">
            <summary>
            Сериализует объект в Json.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Profile.SaveJson(System.String)">
            <summary>
            Сериализует объект в Json.
            </summary>
            <param name="path">Путь для сохранения файла.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Profile.FromString(System.String)">
            <summary>
            Десериализует объект из Json.
            </summary>
            <param name="data">Строка Json.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.BrowserManager.Model.Profile.FromFile(System.String)">
            <summary>
            Десериализует объект из Json файла.
            </summary>
            <param name="path">Путь к файлу.</param>
            <returns></returns>
        </member>
        <member name="T:TopUtils.BrowserManager.Interfaces.IDeviceData">
            <summary>
            Данные устройства.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Interfaces.IDeviceData.Type">
            <summary>
            Тип устройства.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Interfaces.IDeviceData.Versions">
            <summary>
            Список доступных версий.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Interfaces.IDeviceData.Platforms">
            <summary>
            Разрядность ОС и приложения.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Interfaces.IDeviceData.ScreenResolutions">
            <summary>
            Список поддерживаемых разрешений экрана.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Interfaces.IDeviceData.HardwareConcurrency">
            <summary>
            Количество логических процессоров.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.Interfaces.IBrowserData">
            <summary>
            Данные браузера.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Interfaces.IBrowserData.Type">
            <summary>
            Тип браузера.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Interfaces.IBrowserData.Versions">
            <summary>
            Список версий браузера. Для каждой версии свой идентификатор сборки BuildID.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.Interfaces.IBrowserData.Devices">
            <summary>
            Список поддерживаемых устройств.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.GenerationRules">
            <summary>
            Правила генерации параметров профиля.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.GenerationRules.DeviceType">
            <summary>
            Тип устройства.
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            DeviceType.Windows | DeviceType.Mac.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.GenerationRules.DevicesData">
            <summary>
            Данные устройств.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.GenerationRules.BrowserType">
            <summary>
            Тип браузера.
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            BrowserType.MozillaFirefox | BrowserType.Chrome.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.GenerationRules.BrowsersData">
            <summary>
            Данные браузеров.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.GenerationRules.Language">
            <summary>
            Язык. По умолчанию Russian.
            <para> </para>
            Для указания нескольких вариантов используйте формат с разделением через "|":<para />
            Language.Russian | Language.English.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.GenerationRules.LanguagesData">
            <summary>
            Список языков и строк AcceptLanguage.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.GenerationRules.Settings">
            <summary>
            Правила генерации параметров браузера.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.GenerationRules.Screen">
            <summary>
            Правила генерации параметров экрана.
            </summary>
        </member>
        <member name="P:TopUtils.BrowserManager.GenerationRules.Navigator">
            <summary>
            Правила генерации UserAgent'а.
            </summary>
        </member>
        <member name="T:TopUtils.BrowserManager.BrowserManager">
            <summary>
            Настройка браузера.
            </summary>
            <remarks>Гибкая генерация свойств навигатора, UserAgent'а, отпечатков и множества других параметров.</remarks>
        </member>
        <member name="M:TopUtils.BrowserManager.BrowserManager.Generate(TopUtils.BrowserManager.GenerationRules)">
            <summary>
            Генерация профиля браузера.
            </summary>
            <param name="generationRules">Набор правил и данных для генерации. Не обязательный параметр.</param>
            <returns>Заполненый профиль браузера.</returns>
            <example>
            // Создаем объект правил генерации
            var generationRules = new GenerationRules();
            
            // Указываем чтобы использовался случайно Firefox или Chrome
            generationRules.BrowserType = BrowserType.Firefox | BrowserType.Chrome;
            
            // Генерируем профиль браузера
            var profile = BrowserManager.Generate();
            
            // Применяем к ZennoPoster'у
            BrowserManager.Setup(profile, instance, project);
            </example>
        </member>
        <member name="M:TopUtils.BrowserManager.BrowserManager.Setup(TopUtils.BrowserManager.Model.Profile,ZennoLab.CommandCenter.Instance,ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel)">
            <summary>
            Применяет конфигурацию к ZennoPoster'y.
            </summary>
            <param name="profile">Профиль браузера.</param>
            <param name="instance">Экземпляр <see cref="T:ZennoLab.CommandCenter.Instance"/></param>
            <param name="project">Экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel"/></param>
            <example>
            // Создаем объект правил генерации
            var generationRules = new GenerationRules();
            
            // Указываем чтобы использовался случайно Firefox или Chrome
            generationRules.BrowserType = BrowserType.Firefox | BrowserType.Chrome;
            
            // Генерируем профиль браузера
            var profile = BrowserManager.Generate();
            
            // Применяем к ZennoPoster'у
            BrowserManager.Setup(profile, instance, project);
            </example>
        </member>
        <member name="M:TopUtils.BrowserManager.BrowserManager.Save(TopUtils.BrowserManager.Model.Profile,ZennoLab.CommandCenter.Instance,System.String)">
            <summary>
            Сериализует и сохраняет объект профиля браузера.
            </summary>
            <param name="profile">Объект профиля браузера.</param>
            <param name="instance">Экземпляр Instance.</param>
            <param name="path">Путь к файлу для сохранения.</param>
            <example>
             // Генерируем профиль браузера
            var profile = BrowserManager.Generate();
            
            // Сохраняем по указанному пути
            BrowserManager.Save(profile, instance, "C:\\Zenno\\Profiles\\1.txt");
            </example>
        </member>
        <member name="M:TopUtils.BrowserManager.BrowserManager.Save(TopUtils.BrowserManager.Model.Profile,ZennoLab.CommandCenter.Instance)">
            <summary>
            Сериализует и сохраняет объект профиля браузера.
            </summary>
            <param name="profile">Объект профиля браузера.</param>
            <param name="instance">Экземпляр Instance.</param>
            <example>
             // Генерируем профиль браузера
            var profile = BrowserManager.Generate();
            
            // Сохраняем в переменную
            string savedProfile = BrowserManager.Save(profile, instance);
            </example>
            <returns>Строка с сохраненным объектом профиля браузера.</returns>
        </member>
        <member name="M:TopUtils.BrowserManager.BrowserManager.Load(System.String)">
            <summary>
            Загружает объект профиля браузера, сохраненный в файл.
            </summary>
            <param name="path">Путь к файлу.</param>
            <returns>Профиль браузера</returns>
            <example>
            // Загружаем из файла
            string profile = BrowserManager.Load("C:\\Zenno\\Profiles\\1.txt");
            
            // Применяем к ZennoPoster'у
            BrowserManager.Setup(profile, instance, project);
            </example>
        </member>
        <member name="M:TopUtils.BrowserManager.BrowserManager.LoadFromString(System.String)">
            <summary>
            Загружает объект профиля браузера, сохраненный в строку.
            </summary>
            <param name="data">Строка, содержащая сохраненный объект.</param>
            <returns>Профиль браузера</returns>
            <example>
            // Загружаем из строки
            string profile = BrowserManager.LoadFromString(savedProfile);
            
            // Применяем к ZennoPoster'у
            BrowserManager.Setup(profile, instance, project);
            </example>
        </member>
        <member name="T:TopUtils.Extensions.TaskExtensions">
            <summary>
            Методы расширения для Task
            </summary>
        </member>
        <member name="M:TopUtils.Extensions.TaskExtensions.WaitResult``1(System.Threading.Tasks.Task{``0},System.Int32)">
            <summary>
            Ожидает выполнения задачи и возвращает результат.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="task"></param>
            <param name="timeout">Таймаут в миллисекундах.</param>
            <returns>Результат выполнения задачи.</returns>
        </member>
        <member name="T:TopUtils.Extensions.InstanceExtensions">
            <summary>
                Методы расширения для ZennoLab.CommandCenter.Instance
            </summary>
            <remarks>Дополнительный функционал для работы с инстансом.</remarks>
        </member>
        <member name="M:TopUtils.Extensions.InstanceExtensions.ClearCacheAndCookie(ZennoLab.CommandCenter.Instance)">
            <summary>
             Очищает кэш и куки
            </summary>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.CommandCenter.Instance"/> для Fluent Interface</returns>
        </member>
        <member name="T:TopUtils.Extensions.DateTimeExtensions">
            <summary>
            Методы расширения DateTime
            </summary>
        </member>
        <member name="M:TopUtils.Extensions.DateTimeExtensions.ToUnixTime(System.DateTime)">
            <summary>
            Конвертирует дату в число в формате UnixTime.
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:TopUtils.Extensions.IntegerExtension">
            <summary>
            Методы расширения для Integer
            </summary>
        </member>
        <member name="M:TopUtils.Extensions.IntegerExtension.UnixTimeToDateTime(System.Int32)">
            <summary>
            Конвертирует число представляющее UnixTime в соответствующую дату в формате DateTime.
            </summary>
            <param name="input"></param>
            <returns>структуру <see cref="T:System.DateTime"/></returns>
        </member>
        <member name="T:TopUtils.Extensions.LocalvariableExtensions">
            <summary>
            Методы расширения локальных переменных ZennoPoster
            </summary>
            <remarks>Дополнительный функционал для работы с локальными переменными project.Variables["name"].</remarks>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.IsEmpty(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Проверяет указано ли значение переменной.
            </summary>
            <returns>true / false</returns>
            <example>
            project.Variables["temp"].Value = "";
            if (project.Variables["temp"].IsEmpty())
            {
                project.SendInfoToLog("Переменная temp не содержит значения.", true);     
            }
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.IsInt(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Проверяет является ли значение переменной целым числом.
            </summary>
            <returns>true / false</returns>
            <example>
            project.Variables["temp"].Value = "125";
            if (project.Variables["temp"].IsInt())
            {
                project.SendInfoToLog("Значение переменной temp является целым числом.", true);     
            }
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.IsDouble(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Проверяет является ли значение переменной вещественным числом.
            </summary>
            <returns>true / false</returns>
            <example>
            project.Variables["temp"].Value = "125,23";
            if (project.Variables["temp"].IsDouble())
            {
                project.SendInfoToLog("Значение переменной temp является вещественным числом.", true);     
            }
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.IsBool(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Проверяет является ли значение переменной логическим значением.
            </summary>
            <returns>true / false</returns>
            <example>
            project.Variables["temp"].Value = "True";
            if (project.Variables["temp"].IsBool())
            {
                project.SendInfoToLog("Значение переменной temp является логическим.", true);     
            }
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.IsDate(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Проверяет является ли значение переменной датой.
            </summary>
            <returns>true / false</returns>
            <example>
            project.Variables["temp"].Value = "True";
            if (project.Variables["temp"].IsDate())
            {
                project.SendInfoToLog("Значение переменной temp является датой.", true);     
            }
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.IsFileExists(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Проверяет существует ли файл по указанному пути.
            </summary>
            <returns>true / false</returns>
            <example>
            project.Variables["temp"].Value = "C:\accounts.txt";
            if (!project.Variables["temp"].IsFileExists())
            {
                project.SendInfoToLog("Указанный файл не существует.", true);     
            }
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.IsTextFileEmpty(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Проверяет пуст ли текстовый файл.
            </summary>
            <returns>true / false</returns>
            <example>
            project.Variables["temp"].Value = "C:\accounts.txt";
            if (project.Variables["temp"].IsTextFileEmpty())
            {
                project.SendInfoToLog("Файл пуст.", true);     
            }
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.IsDirectoryExists(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Проверяет существует ли директория по указанному пути.
            </summary>
            <returns>true / false</returns>
            <example>
            project.Variables["temp"].Value = "C:\TestDirectoryPath\";
            if (!project.Variables["temp"].IsDirectoryExists())
            {
                project.SendInfoToLog("Директория по указанному пути не существует.", true);     
            }
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.IsDirectoryEmpty(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Проверяет есть ли файлы в директории.
            </summary>
            <returns>true / false</returns>
            <example>
            project.Variables["temp"].Value = "C:\TestDirectoryPath\";
            if (project.Variables["temp"].IsDirectoryEmpty())
            {
                project.SendInfoToLog("Директория не содерижт файлов.", true);     
            }
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.IsArray(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.Char)">
            <summary>
            Проверяет является ли строка массивом данных.
            </summary>
            <param name="variable"></param>
            <param name="separator">Разделитель.</param>
            <returns>true / false</returns>
            <example>
            project.Variables["temp"].Value = "1;3;4;77;5;3";
            if (project.Variables["temp"].IsArray(';'))
            {
                project.SendInfoToLog("Значение переменной temp является массивом значений.", true);     
            }
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.IsRange(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.Char)">
            <summary>
            Проверяет является ли значение переменной диапазоном чисел или дат.
            </summary>
            <param name="variable"></param>
            <param name="separator">Разделитель. По умолчанию "-".</param>
            <returns>true / false</returns>
            <example>
            project.Variables["temp"].Value = "100 — 200";
            if (project.Variables["temp"].IsRange('—'))
            {
                project.SendInfoToLog("Значение переменной temp является диапазоном значений.", true);     
            }
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ToRangeOfFloatNumbers(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.Char)">
            <summary>
            Конвертирует строковое значение переменной в диапазон вещественных чисел.
            </summary>
            <param name="variable"></param>
            <param name="separator">Разделитель. По умолчанию "-".</param>
            <returns>Диапазон вещественных чисел.</returns>
            <example>
            project.Variables["temp"].Value = "100.3 — 200.11";
            var range = project.Variables["temp"].ToRangeOfFloatNumbers('—');
            project.SendInfoToLog("Диапазон вещественных чисел от " + range.From.ToString() + " до " + range.To.ToString(), true);  
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ToRangeOfNumbers(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.Char)">
            <summary>
            Конвертирует строковое значение переменной в диапазон целых чисел.
            </summary>
            <param name="variable"></param>
            <param name="separator">Разделитель. По умолчанию "-".</param>
            <returns>Диапазон целых чисел.</returns>
            <example>
            project.Variables["temp"].Value = "100 — 200";
            var range = project.Variables["temp"].ToRangeOfNumbers('—');
            project.SendInfoToLog("Диапазон целых чисел от " + range.From.ToString() + " до " + range.To.ToString(), true);  
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ToRangeOfDates(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.Char)">
            <summary>
            Конвертирует строковое значение переменной в диапазон дат.
            </summary>
            <param name="variable"></param>
            <param name="separator">Разделитель. По умолчанию "-".</param>
            <returns>Диапазон дат.</returns>
            <example>
            project.Variables["temp"].Value = "10.02.2016 — 22.12.2017";
            var range = project.Variables["temp"].ToRangeOfDates('—');
            project.SendInfoToLog("Диапазон дат от " + range.From.ToString() + " до " + range.To.ToString(), true);  
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ToBool(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Конвертирует строковое значение переменной в Boolean.
            </summary>
            <returns>true / false</returns>
            <example>
            project.Variables["temp"].Value = "True";
            bool value = project.Variables["temp"].ToBool();
            project.SendInfoToLog(value.ToString(), true);  
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ToInt(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Конвертирует строковое значение переменной в Int32.
            </summary>
            <returns>Целое число</returns>
            <example>
            project.Variables["temp"].Value = "123";
            int value = project.Variables["temp"].ToInt();
            project.SendInfoToLog(value.ToString(), true);  
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ToDouble(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Конвертирует строковое значение переменной в Double.
            </summary>
            <returns>Вещественное число</returns>
            <example>
            project.Variables["temp"].Value = "123,53";
            double value = project.Variables["temp"].ToDouble();
            project.SendInfoToLog(value.ToString(), true);  
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ToDateTime(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Конвертирует строковое значение переменной в DateTime.
            </summary>
            <returns>Структура DateTime</returns>
            <example>
            project.Variables["temp"].Value = "11.01.1999";
            DateTime value = project.Variables["temp"].ToDateTime();
            project.SendInfoToLog(value.ToString(), true);  
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ToArray(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.Char)">
            <summary>
            Разбивает строковое значение переменной на массив значений.
            </summary>
            <param name="variable"></param>
            <param name="separator">Разделитель.</param>
            <returns>Массив строковых значений.</returns>
            <example>
            project.Variables["temp"].Value = "1;2;3;4;5;6;7;8";
            string[] value = project.Variables["temp"].ToArray(';');
            project.SendInfoToLog(value.Length.ToString(), true);  
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ToArrayFromTextFile(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Считывает содержимое файла в массив.
            </summary>
            <param name="variable"></param>
            <returns>Массив строковых значений.</returns>
            <example>
            project.Variables["temp"].Value = @"C:\temp.txt";
            string[] value = project.Variables["temp"].ToArrayFromTextFile();
            project.SendInfoToLog(value.Length.ToString(), true);
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ToStringFromTextFile(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Считывает содержимое файла в строку.
            </summary>
            <param name="variable"></param>
            <returns>Содержимое файла.</returns>
            <example>
            project.Variables["temp"].Value = @"C:\temp.txt";
            string value = project.Variables["temp"].ToStringFromTextFile();
            project.SendInfoToLog(value, true);
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.Spintax(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable)">
            <summary>
            Применяет Spintax к содержимому переменной.
            </summary>
            <param name="variable"></param>
            <returns>Строка</returns>
            <example>
            project.Variables["temp"].Value = "{One | Two | Three}";
            string value = project.Variables["temp"].Spintax();
            project.SendInfoToLog(value, true);  
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ThrowIfEmpty(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.String)">
            <summary>
            Бросает исключение, если переменная пустая.
            </summary>
            <param name="variable"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable"/> для Fluent Interface</returns>
            <example>
            project.Variables["temp"].Value = "1";
            project.Variables["temp"].ThrowIfEmpty();
            project.SendInfoToLog("Переменная temp не пуста.", true);
            
            project.Variables["temp"].Value = "";
            project.Variables["temp"].ThrowIfEmpty("Переменная temp пуста.");  //Выбросит исключение
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ThrowIfNotInt(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.String)">
            <summary>
            Бросает исключение, если значение переменной не является целым числом.
            </summary>
            <param name="variable"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable"/> для Fluent Interface</returns>
            <example>
            project.Variables["temp"].Value = "123";
            project.Variables["temp"].ThrowIfNotInt();
            project.SendInfoToLog("Переменная temp содержит целое число.", true);  
            
            project.Variables["temp"].Value = "not number";
            project.Variables["temp"].ThrowIfNotInt("Значение переменной temp не является целым числом.");  //Выбросит исключение
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ThrowIfNotBool(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.String)">
            <summary>
            Бросает исключение, если значение переменной не является логическим значением.
            </summary>
            <param name="variable"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable"/> для Fluent Interface</returns>
            <example>
            project.Variables["temp"].Value = "True";
            project.Variables["temp"].ThrowIfNotBool();
            project.SendInfoToLog("Переменная temp содержит логическое значение.", true);  
            
            project.Variables["temp"].Value = "not boolean";
            project.Variables["temp"].ThrowIfNotBool("Значение переменной temp не является логическим.");  //Выбросит исключение
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ThrowIfNotDouble(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.String)">
            <summary>
            Бросает исключение, если значение переменной не является вещественным числом.
            </summary>
            <param name="variable"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable"/> для Fluent Interface</returns>
            <example>
            project.Variables["temp"].Value = "1.23";
            project.Variables["temp"].ThrowIfNotDouble();
            project.SendInfoToLog("Переменная temp содержит вещественное значение.", true); 
            
            project.Variables["temp"].Value = "not double";
            project.Variables["temp"].ThrowIfNotDouble("Значение переменной temp не является вещественным числом.");  //Выбросит исключение 
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ThrowIfNotDate(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.String)">
            <summary>
                Бросает исключение, если значение переменной не является датой.
            </summary>
            <param name="variable"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable"/> для Fluent Interface</returns>
            <example>
            project.Variables["temp"].Value = "10.11.2017";
            project.Variables["temp"].ThrowIfNotDate();
            project.SendInfoToLog("Переменная temp содержит дату.", true); 
            
            project.Variables["temp"].Value = "123";
            project.Variables["temp"].ThrowIfNotDate("Значение переменной temp не является датой.");  //Выбросит исключение 
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ThrowIfNotArray(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.String,System.Char)">
            <summary>
            Бросает исключение, если значение переменной не является массивом данных.
            </summary>
            <param name="variable"></param>
            <param name="separator">Разделитель</param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable"/> для Fluent Interface</returns>
            <example>
            project.Variables["temp"].Value = "1,2,3,4";
            project.Variables["temp"].ThrowIfNotArray();
            project.SendInfoToLog("Переменная temp содержит массив значений.", true); 
            
            project.Variables["temp"].Value = "123";
            project.Variables["temp"].ThrowIfNotArray("Значение переменной temp не является массивом.");  //Выбросит исключение 
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ThrowIfFileNotExists(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.String)">
            <summary>
            Бросает исключение, если файл не существует по указанному пути.
            </summary>
            <param name="variable"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable"/> для Fluent Interface</returns>
            <example>
            project.Variables["temp"].Value = "C:\onetwothree.txt";
            project.Variables["temp"].ThrowIfFileNotExists("Файл onetwothree.txt не существует."); //Выбросит исключение, если файла не существует.
            project.SendInfoToLog("Файл onetwothree.txt найден.", true); 
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ThrowIfTextFileIsEmpty(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.String)">
            <summary>
            Бросает исключение, если файл пуст.
            </summary>
            <param name="variable"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable"/> для Fluent Interface</returns>
            <example>
            project.Variables["temp"].Value = "C:\onetwothree.txt";
            project.Variables["temp"].ThrowIfTextFileIsEmpty("Файл onetwothree.txt пуст."); //Выбросит исключение, если файла не существует.
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ThrowIfDirectoryNotExists(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.String)">
            <summary>
            Бросает исключение, если директория не существует по указанному пути.
            </summary>
            <param name="variable"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable"/> для Fluent Interface</returns>
            <example>
            project.Variables["temp"].Value = "C:\YourDirectoryPath\";
            project.Variables["temp"].ThrowIfDirectoryNotExists("Директория C:\YourDirectoryPath\ не существует"); //Выбросит исключение, если директория не существует.
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ThrowIfDirectoryIsEmpty(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.String)">
            <summary>
            Бросает исключение, если директория пуста.
            </summary>
            <param name="variable"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable"/> для Fluent Interface</returns>
            <example>
            project.Variables["temp"].Value = "C:\YourDirectoryPath\";
            project.Variables["temp"].ThrowIfDirectoryIsEmpty("Директория C:\YourDirectoryPath\ пуста."); //Выбросит исключение, если директория не содержит файлов.
            </example>
        </member>
        <member name="M:TopUtils.Extensions.LocalvariableExtensions.ThrowIfNotRange(ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable,System.String,System.Char)">
            <summary>
                Бросает исключение, если значение переменной не является диапазоном.
            </summary>
            <param name="variable"></param>
            <param name="separator">Разделитель</param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.InterfacesLibrary.ProjectModel.ILocalVariable"/> для Fluent Interface</returns>
            <example>
            project.Variables["temp"].Value = "1 — 23";
            project.Variables["temp"].ThrowIfNotRange("Значение переменной temp не является диапазоном значений."); 
            </example>
        </member>
        <member name="T:TopUtils.Extensions.ProjectExtensions">
            <summary>
            Методы расширения для ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel
            </summary>
            <remarks>Дополнительный функционал для работы с project'ом.</remarks>
        </member>
        <member name="M:TopUtils.Extensions.ProjectExtensions.GetLogger(ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel)">
            <summary>
            Возвращает объект мультилоггера.
            </summary>
            <returns>Экземпляр <see cref="T:TopUtils.Loggers.MultiLogger"/></returns>
        </member>
        <member name="T:TopUtils.Extensions.HtmlElementExtensions">
            <summary>
            Методы расширения для ZennoLab.CommandCenter.HtmlElement.
            </summary>
            <remarks>Дополнительный функционал для работы с элементами страницы.</remarks>
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.IsHidden(ZennoLab.CommandCenter.HtmlElement)">
            <summary>
            Проверяет скрыт ли элемент.
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.Rise(ZennoLab.CommandCenter.HtmlElement,TopUtils.Enums.Event,TopUtils.Enums.Emulation)">
            <summary>
            Выполняет событие для элемента.
            </summary>
            <param name="he"></param>
            <param name="event">Выполняемое событие.</param>
            <param name="emulation">Уровень эмуляции. По умолчанию EmulationLevel.Full.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.CommandCenter.HtmlElement"/> для Fluent Interface</returns>
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.ClickOn(ZennoLab.CommandCenter.HtmlElement)">
            <summary>
            Выполняет клик по элементу.
            </summary>
            <param name="he"></param>
            <remarks>Обертка над Click</remarks>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.CommandCenter.HtmlElement"/> для Fluent Interface</returns>
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.SetAttr(ZennoLab.CommandCenter.HtmlElement,System.String,System.String)">
            <summary>
            Устанавливает значение атрибуа элемента.
            </summary>
            <param name="he"></param>
            <param name="attrName">Название атрибута.</param>
            <param name="attrValue">Устанавливаемое значение.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.CommandCenter.HtmlElement"/> для Fluent Interface</returns>
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.GetAttr(ZennoLab.CommandCenter.HtmlElement,System.String)">
            <summary>
            Получает значение атрибуа элемента.
            </summary>
            <param name="he"></param>
            <param name="attrName">Название атрибута.</param>
            <returns>значение атрибута</returns>
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.SetVal(ZennoLab.CommandCenter.HtmlElement,System.String,TopUtils.Enums.Emulation,System.Boolean)">
            <summary>
            Устанавливает значение элемента.
            </summary>
            <param name="he"></param>
            <param name="value">Устанавливаемое значение.</param>
            <param name="emulation">Уровень эмуляции. По умолчанию EmulationLevel.Full.</param>
            <param name="useSelectedItems">
            true, если вам нужно использовать автоматическое заполнение стандартных полей типа
            Select, в противном случае - false.
            </param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.CommandCenter.HtmlElement"/> для Fluent Interface</returns>
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.GetVal(ZennoLab.CommandCenter.HtmlElement)">
            <summary>
            Возвращает значение элемента. Обертка над GetValue();
            </summary>
            <returns>значение элемента</returns>
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.ScrollTo(ZennoLab.CommandCenter.HtmlElement)">
            <summary>
            Прокручивает струницу к текущему элементу. Обертка над ScrollIntoView().
            </summary>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.CommandCenter.HtmlElement"/> для Fluent Interface</returns>
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.GetChildByXpath(ZennoLab.CommandCenter.HtmlElement,System.String,System.Int32)">
            <summary>
            Поиск дочеренего элемента по XPath. Обертка над FindChildByXPath.
            </summary>
            <param name="he"></param>
            <param name="xpath"></param>
            <param name="number">Номер совпадения</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.ThrowIfNull(ZennoLab.CommandCenter.HtmlElement,System.String)">
            <summary>
            Бросает исключение, если элемент пуст (свойство IsVoid возвращает true).
            </summary>
            <param name="he"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns></returns>
            <exception cref="!:ZennoLab.CommandCenter.HtmlElementNullException"></exception>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.CommandCenter.HtmlElement"/> для Fluent Interface</returns> 
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.ThrowIfNotNull(ZennoLab.CommandCenter.HtmlElement,System.String)">
            <summary>
            Бросает исключение, если элемент не пуст (свойство IsVoid возвращает false).
            </summary>
            <param name="he"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns></returns>
            <exception cref="!:ZennoLab.CommandCenter.HtmlElementNullException"></exception>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.CommandCenter.HtmlElement"/> для Fluent Interface</returns> 
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.ThrowIfHidden(ZennoLab.CommandCenter.HtmlElement,System.String)">
            <summary>
            Бросает исключение, если елемент скрыт.
            </summary>
            <param name="he"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.CommandCenter.HtmlElement"/> для Fluent Interface</returns>
        </member>
        <member name="M:TopUtils.Extensions.HtmlElementExtensions.ThrowIfNullOrHidden(ZennoLab.CommandCenter.HtmlElement,System.String)">
            <summary>
            Бросает исключение, если елемент пуст (свойство IsVoid возвращает true) или скрыт.
            </summary>
            <param name="he"></param>
            <param name="exceptionMessage">Сообщение исключения.</param>
            <returns>Тот же экземпляр <see cref="T:ZennoLab.CommandCenter.HtmlElement"/> для Fluent Interface</returns>
        </member>
        <member name="T:TopUtils.Extensions.TabExtensions">
            <summary>
            Методы расширения ZennoLab.CommandCenter.Tab.
            </summary>
            <remarks>Дополнительный функционал для работы с табом.</remarks>
        </member>
        <member name="M:TopUtils.Extensions.TabExtensions.Go(ZennoLab.CommandCenter.Tab,System.String,System.String)">
            <summary>
            Выполняет переход по указанному Url. Обертка над Navigate.
            </summary>
            <param name="tab"></param>
            <param name="url">Ссылка.</param>
            <param name="referer">Реферер.</param>
            <returns>Тот же объект <see cref="T:ZennoLab.CommandCenter.Tab"/>для Fluent Interface</returns>
        </member>
        <member name="M:TopUtils.Extensions.TabExtensions.Refresh(ZennoLab.CommandCenter.Tab)">
            <summary>
            Выполняет обновление текущей страницы.
            </summary>
            <returns>Тот же объект <see cref="T:ZennoLab.CommandCenter.Tab"/>для Fluent Interface</returns>
        </member>
        <member name="M:TopUtils.Extensions.TabExtensions.WaitLoading(ZennoLab.CommandCenter.Tab)">
            <summary>
            Выполняет ожидание полной прогрузки страницы.
            </summary>
            <returns>Тот же объект <see cref="T:ZennoLab.CommandCenter.Tab"/>для Fluent Interface</returns>
        </member>
        <member name="M:TopUtils.Extensions.TabExtensions.GetElementByXpath(ZennoLab.CommandCenter.Tab,System.String,System.Int32)">
            <summary>
            Находит элемент по XPath. Обертка над FindElementByXPath.
            </summary>
            <param name="tab"></param>
            <param name="xpath">XPath.</param>
            <param name="number">Номер совпадения.</param>
            <returns>Найденный элемент.</returns>
        </member>
        <member name="M:TopUtils.Extensions.TabExtensions.WaitFor(ZennoLab.CommandCenter.Tab,System.String,System.Int32,System.Int32)">
            <summary>
            Выполняет ожидание, пока на странице не будет найден HTML элемент по указанному XPath, либо до истечения таймаута.
            </summary>
            <param name="tab"></param>
            <param name="xpath">XPath для поиска.</param>
            <param name="number">Номер совпадения.</param>
            <param name="timeout">Длительность поиска в миллисекундах. По умолчанию 5000.</param>
            <returns>Возвращает true, если элемент был найден.</returns>
        </member>
        <member name="M:TopUtils.Extensions.TabExtensions.WaitFor(ZennoLab.CommandCenter.Tab,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Выполняет ожидание, пока на странице не будет найден HTML элемент по указанном атрибутам, либо до истечения
            таймаута.
            </summary>
            <param name="tab"></param>
            <param name="tags">Список тегов. Если количество тегов больше одного, их необходимо разделить ";".</param>
            <param name="attrName">Имя атрибута.</param>
            <param name="attrValue">Значение атрибута.</param>
            <param name="searchKind">Тип поиска. Доступно: text, notext, regex.</param>
            <param name="number">Номер совпадения.</param>
            <param name="timeout">Длительность поиска в миллисекундах. По умолчанию 5000.</param>
            <returns>Тот же объект <see cref="T:ZennoLab.CommandCenter.Tab"/>для Fluent Interface</returns>
        </member>
        <member name="M:TopUtils.Extensions.TabExtensions.WaitFor(ZennoLab.CommandCenter.Tab,System.Func{System.Boolean},System.Int32)">
            <summary>
            Выполняет ожидание, пока предикат не вернет true, либо до истечения таймаута.
            </summary>
            <param name="tab"></param>
            <param name="predicate">Условное выражение.</param>
            <param name="timeout">Длительность проверки выражения в миллисекундах. По умолчанию 5000.</param>
            <returns>Тот же объект <see cref="T:ZennoLab.CommandCenter.Tab"/>для Fluent Interface</returns>
        </member>
        <member name="T:TopUtils.Enums.Emulation">
            <summary>
                Эмуляция
            </summary>
        </member>
        <member name="F:TopUtils.Enums.Emulation.None">
            <summary>
                Уровень эмуляции по умолчанию без дополнительных событий и действий.
            </summary>
        </member>
        <member name="F:TopUtils.Enums.Emulation.Middle">
            <summary>
                Стандартный уровень эмуляции включает в себя минимум действий, без дополнительных событий.
            </summary>
        </member>
        <member name="F:TopUtils.Enums.Emulation.Full">
            <summary>
                Полная эмуляция, которая включает в себя генерации всех событий, таких как mouseover, mousemove, mouseout, фокус на
                элемент и другие.
            </summary>
        </member>
        <member name="T:TopUtils.Enums.Event">
            <summary>
                События HtmlElement
            </summary>
        </member>
        <member name="T:TopUtils.Enums.Logger">
            <summary>
            Виды логеров
            </summary>
        </member>
        <member name="F:TopUtils.Enums.Logger.ProjectMaker">
            <summary>
            Лог ProjectMaker
            </summary>
        </member>
        <member name="F:TopUtils.Enums.Logger.ZennoPoster">
            <summary>
            Лог ZennoPoster
            </summary>
        </member>
        <member name="F:TopUtils.Enums.Logger.File">
            <summary>
            Файловый логер
            </summary>
        </member>
        <member name="F:TopUtils.Enums.Logger.Custom">
            <summary>
            Пользовательские логеры
            </summary>
        </member>
        <member name="T:TopUtils.Enums.MessageType">
            <summary>
                Тип сообщения
            </summary>
        </member>
        <member name="T:TopUtils.Exceptions.AccountAccessException">
            <summary>
            Ошибка доступа к аккаунту
            </summary>
        </member>
        <member name="M:TopUtils.Exceptions.AccountAccessException.#ctor(System.String)">
            <summary>
            Создает экземпляр AccountAccessException с указанным сообщением.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:TopUtils.Exceptions.HtmlElementHiddenException">
            <summary>
            Ошибка скрытого HtmlElement
            </summary>
        </member>
        <member name="M:TopUtils.Exceptions.HtmlElementHiddenException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:TopUtils.Exceptions.HtmlElementNullException">
            <summary>
            Ошибка, возникающий при HtmlElement == null
            </summary>
        </member>
        <member name="M:TopUtils.Exceptions.HtmlElementNullException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:TopUtils.Exceptions.DirectoryIsEmptyException">
            <summary>
            Ошибка, возникающая если директория пуста
            </summary>
        </member>
        <member name="M:TopUtils.Exceptions.DirectoryIsEmptyException.#ctor(System.String)">
            <inheritdoc />
            <param name="message"></param>
        </member>
        <member name="T:TopUtils.Exceptions.FileIsEmptyException">
            <summary>
            Ошибка, возникающая если файл пуст.
            </summary>
        </member>
        <member name="M:TopUtils.Exceptions.FileIsEmptyException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:TopUtils.Exceptions.LocalVariableException">
            <summary>
            Ошибка локальной переменной
            </summary>
        </member>
        <member name="M:TopUtils.Exceptions.LocalVariableException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:TopUtils.Exceptions.StringParseException">
            <summary>
            Ошибка, возникающая при парсинге строки
            </summary>
        </member>
        <member name="M:TopUtils.Exceptions.StringParseException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="T:TopUtils.Exceptions.ExceptionArgs">
            <summary>
                Параметры исключения.
            </summary>
        </member>
        <member name="M:TopUtils.Exceptions.ExceptionArgs.#ctor(System.Object,System.String,System.String)">
            <summary>
                Параметры исключения.
            </summary>
            <param name="target">Объект, не прошедший проверку.</param>
            <param name="methodName">Имя метода.</param>
            <param name="message">Сообщение.</param>
        </member>
        <member name="P:TopUtils.Exceptions.ExceptionArgs.Target">
            <summary>
            Объект, не прошедший проверку.
            </summary>
        </member>
        <member name="P:TopUtils.Exceptions.ExceptionArgs.MethodName">
            <summary>
                Имя метода.
            </summary>
        </member>
        <member name="P:TopUtils.Exceptions.ExceptionArgs.Message">
            <summary>
                Сообщение.
            </summary>
        </member>
        <member name="T:TopUtils.Loggers.FileLogger">
            <summary>
            Файловый логгер
            </summary>
        </member>
        <member name="M:TopUtils.Loggers.FileLogger.#ctor(System.String)">
            <summary>
            Создает экземпляр файлового логера
            </summary>
            <param name="path">Путь к файлу</param>
        </member>
        <member name="P:TopUtils.Loggers.FileLogger.Path">
            <summary>
            Путь к файлу с логами
            </summary>
        </member>
        <member name="M:TopUtils.Loggers.FileLogger.Log(System.String,TopUtils.Enums.MessageType)">
            <summary>
            Логирует сообщение в файл
            </summary>
            <param name="message">Сообщение</param>
            <param name="messageTypeType">Тип сообщения</param>
        </member>
        <member name="T:TopUtils.Loggers.ILogger">
            <summary>
                Представляет интерфейс логгера
            </summary>
        </member>
        <member name="M:TopUtils.Loggers.ILogger.Log(System.String,TopUtils.Enums.MessageType)">
            <summary>
            Логирует сообщение
            </summary>
            <param name="message">Сообщение</param>
            <param name="messageTypeType">Тип сообщения</param>
        </member>
        <member name="T:TopUtils.Loggers.MessageBoxLogger">
            <summary>
            Логгер MessageBox 
            </summary>
        </member>
        <member name="M:TopUtils.Loggers.MessageBoxLogger.Log(System.String,TopUtils.Enums.MessageType)">
            <summary>
            Выводить диалоговое окно с сообщением
            </summary>
            <param name="message">Сообщение</param>
            <param name="messageTypeType">Тип сообщения</param>
        </member>
        <member name="T:TopUtils.Loggers.MultiLogger">
            <summary>
            Мультилогер.
            </summary>
            <remarks>Возможность одновременного логирования в несколько источников.</remarks>
        </member>
        <member name="P:TopUtils.Loggers.MultiLogger.CustomLoggers">
            <summary>
            Набор пользовательских логгеров.
            </summary>
        </member>
        <member name="P:TopUtils.Loggers.MultiLogger.LogTo">
            <summary>
            Отвечает за разрешенные способы логирования при использовании множественного логирования.
            </summary>
        </member>
        <member name="P:TopUtils.Loggers.MultiLogger.FileLogPath">
            <summary>
            Путь к файлу логов.
            <para />
            По умолчанию логи пишутся в директорию проекта.
            </summary>
        </member>
        <member name="P:TopUtils.Loggers.MultiLogger.IsDebugMode">
            <summary>
            Указывает находится ли шаблон в режиме Debug. <para />
            По умолчанию берется значение <see cref="F:Global.Variables.IsDebugMode"/>
            </summary>
        </member>
        <member name="P:TopUtils.Loggers.MultiLogger.PrefixMessage">
            <summary>
            Префиксное сообщение
            </summary>
        </member>
        <member name="P:TopUtils.Loggers.MultiLogger.SuffixMessage">
            <summary>
            Префиксное сообщение
            </summary>
        </member>
        <member name="M:TopUtils.Loggers.MultiLogger.GetInstance(ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel)">
            <summary>
            Возвращает экземпляр класса MultiLogger.
            </summary>
            <param name="project">Экземпляр project.</param>
            <returns>Экземпляр MultiLogger.</returns>
            <example>
            var logger = MultiLogger.GetInstance(project);
            </example>
        </member>
        <member name="M:TopUtils.Loggers.MultiLogger.MultiLog(System.String,TopUtils.Enums.MessageType)">
            <summary>
            Логирование через набор логгеров, установленных через свойство LogTo.
            </summary>
            <param name="message">Сообщение.</param>
            <param name="messageType">Тип сообщения. Не обязательный параметр, по умолчанию MessageType.Info.</param>
            <example>
            var logger = project.GetLogger();
            logger.MultiLog("Тестовая запись в лог", MessageType.Warning);
            </example>
        </member>
        <member name="M:TopUtils.Loggers.MultiLogger.LogToProjectMaker(System.String,System.Boolean,TopUtils.Enums.MessageType)">
            <summary>
            Вывод сообщения в лог ProjectMaker.
            Обертка над методами project.Send***ToLog.
            </summary>
            <param name="message">Сообщение</param>
            <param name="logToZennoPoster">Выводить ли сообщение в ZennoPoster'e.</param>
            <param name="messageType">Тип сообщения.</param>
            <example>
            var logger = project.GetLogger();
            logger.LogToProjectMaker("Тестовая запись в лог");
            </example>
        </member>
        <member name="M:TopUtils.Loggers.MultiLogger.LogToFile(System.String,TopUtils.Enums.MessageType)">
            <summary>
            Логирование в файл.
            </summary>
            <param name="message">Сообщение.</param>
            <param name="messageType">Тип сообщения.</param>
            <example>
            var logger = project.GetLogger();
            logger.LogToFile("Тестовая запись в лог");
            </example>
        </member>
        <member name="M:TopUtils.Loggers.MultiLogger.LogByCustom(System.String,TopUtils.Enums.MessageType)">
            <summary>
            Логирование через набор пользовательских логгеров, установленных в свойстве CustomLoggers.
            </summary>
            <param name="message">Сообщение.</param>
            <param name="messageType">Тип сообщения.</param>
            <example>
            var logger = project.GetLogger();
            logger.LogByCustom("Тестовая запись в лог");
            </example>
        </member>
        <member name="M:TopUtils.Loggers.MultiLogger.MultiLogDebug(System.String,TopUtils.Enums.MessageType)">
            <summary>
            Логирование в режиме Debug через набор логгеров, установленных через свойство LogTo.
            </summary>
            <param name="message">Сообщение.</param>
            <param name="messageType">Тип сообщения. Не обязательный параметр, по умолчанию MessageType.Info.</param>
            <example>
            var logger = project.GetLogger(); 
            logger.MultiLogDebug("Тестовая запись в лог", MessageType.Warning);
            </example>
        </member>
        <member name="M:TopUtils.Loggers.MultiLogger.LogToProjectMakerDebug(System.String,System.Boolean,TopUtils.Enums.MessageType)">
            <summary>
            Вывод сообщения в лог ProjectMaker в режиме Debug.
            Обертка над методами project.Send***ToLog.
            </summary>
            <param name="message">Сообщение</param>
            <param name="logToZennoPoster">Выводить ли сообщение в ZennoPoster'e.</param>
            <param name="messageType">Тип сообщения.</param>
            <example>
            var logger = project.GetLogger();
            logger.LogToProjectMaker("Тестовая запись в лог");
            </example>
        </member>
        <member name="M:TopUtils.Loggers.MultiLogger.LogToFileDebug(System.String,TopUtils.Enums.MessageType)">
            <summary>
            Логирование в файл в режиме Debug.
            </summary>
            <param name="message">Сообщение.</param>
            <param name="messageType">Тип сообщения.</param>
            <example>
            var logger = project.GetLogger();
            logger.LogToFile("Тестовая запись в лог");
            </example>
        </member>
        <member name="M:TopUtils.Loggers.MultiLogger.LogByCustomDebug(System.String,TopUtils.Enums.MessageType)">
            <summary>
            Логирование в режиме Debug через набор пользовательских логгеров, установленных в свойстве CustomLoggers.
            </summary>
            <param name="message">Сообщение.</param>
            <param name="messageType">Тип сообщения.</param>
            <example>
            var logger = project.GetLogger();
            logger.LogByCustom("Тестовая запись в лог");
            </example>
        </member>
        <member name="T:TopUtils.Loggers.ProjectMakerLogger">
            <summary>
            Логгер ProjectMaker
            </summary>
        </member>
        <member name="M:TopUtils.Loggers.ProjectMakerLogger.#ctor(ZennoLab.InterfacesLibrary.ProjectModel.IZennoPosterProjectModel,System.Boolean)">
            <summary>
            Создает экземпляр логгера
            </summary>
            <param name="project"></param>
            <param name="logToZennoPoster"></param>
        </member>
        <member name="M:TopUtils.Loggers.ProjectMakerLogger.Log(System.String,TopUtils.Enums.MessageType)">
            <summary>
            Выводить сообщение в лог ProjectMaker
            </summary>
            <param name="message">Сообщение</param>
            <param name="messageTypeType">Тип сообщения</param>
        </member>
        <member name="T:TopUtils.Utils.Range`1">
            <summary>
            Представляет интервал значений
            </summary>
            <typeparam name="T">Тип значений.</typeparam>
        </member>
        <member name="M:TopUtils.Utils.Range`1.#ctor(`0,`0)">
            <summary>
            Представляет интервал значений
            </summary>
            <param name="from">Начальное значение интервала.</param>
            <param name="to">Конечное значение интервала.</param>
        </member>
        <member name="P:TopUtils.Utils.Range`1.From">
            <summary>
            Начальное значение интервала.
            </summary>
        </member>
        <member name="P:TopUtils.Utils.Range`1.To">
            <summary>
            Конечное значение интервала.
            </summary>
        </member>
        <member name="M:TopUtils.Utils.Range`1.Contains(`0)">
            <summary>
            Проверяет вхождение значения в интервал.
            </summary>
            <param name="value">Проверяемое значение.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.Utils.Range`1.Normalize">
            <summary>
            Приводит диапазон значений к нормальному виду. Если From > To, то From = To;
            </summary>
        </member>
        <member name="M:TopUtils.Utils.Range`1.Next">
            <summary>
            Возвращает случайное значение из интервала.
            </summary>
            <returns></returns>
        </member>
        <member name="P:TopUtils.Utils.Throw.InvokeBeforeException">
            <summary>
            Метод, вызывающийся перед броском исключения.
            </summary>
        </member>
        <member name="M:TopUtils.Utils.Throw.Exception(System.String)">
            <summary>
            Выбрасывает исключение типа <see cref="T:System.Exception"/> с указанным сообщением
            </summary>
            <param name="message">Сообщение</param>
        </member>
        <member name="M:TopUtils.Utils.Throw.Exception``1(System.String)">
            <summary>
            Выбрасывает исключение типа TException с указанным сообщением
            </summary>  
            <param name="message">Сообщение</param>
        </member>
        <member name="T:TopUtils.Utils.StringParser">
            <summary>
                Парсер строк.
            </summary>
        </member>
        <member name="M:TopUtils.Utils.StringParser.Parse(System.String,System.String)">
            <summary>
                Разбирает строку по паттерну и возвращает словарь с результатами.
            </summary>
            <param name="input">Входная строка.</param>
            <param name="pattern">Паттерн в формате name1:name2. Где name* - уникальное название. Пример: login:password;proxy</param>
            <returns></returns>
        </member>
        <member name="T:TopUtils.Utils.Serialization">
            <summary>
            Содержит методы сериализации.
            </summary>
        </member>
        <member name="M:TopUtils.Utils.Serialization.SerializeToXmlAndSave(System.String,System.Object)">
            <summary>
            Сериализует в XML.
            </summary>
            <param name="path">Путь для сохранения файла.</param>
            <param name="savedObject">Сериализируемый объект.</param>
        </member>
        <member name="M:TopUtils.Utils.Serialization.SerializeToXml(System.Object)">
            <summary>
            Сериализует в XML.
            </summary>
            <param name="savingObject">Сериализируемый объект.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.Utils.Serialization.DeserializeXmlFromFile(System.String,System.Type)">
            <summary>
            Десериализирует объект из файла.
            </summary>
            <param name="path">Путь к файлу.</param>
            <param name="type">Тип объекта.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.Utils.Serialization.DeserializeFromXmlString(System.String,System.Type)">
            <summary>
            Десериализирует объект из строки XML.
            </summary>
            <param name="xml">Строка XML.</param>
            <param name="type">Тип объекта.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.Utils.Serialization.SerializeToJson(System.String,System.Object)">
            <summary>
            Сериализует в Json.
            </summary>
            <param name="path">Путь для сохранения файла.</param>
            <param name="savingObject">Сериализируемый объект.</param>
        </member>
        <member name="M:TopUtils.Utils.Serialization.SerializeToJson(System.Object)">
            <summary>
            Сериализует в Json.
            </summary>
            <param name="savedObject">Сериализируемый объект.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.Utils.Serialization.DeserializeJsonFromFile(System.String,System.Type)">
            <summary>
            Десериализует объект из файла Json.
            </summary>
            <param name="path">Путь к файлу.</param>
            <param name="type">Тип объекта.</param>
            <returns></returns>
        </member>
        <member name="M:TopUtils.Utils.Serialization.DeserializeFromJsonString(System.String,System.Type)">
            <summary>
            Десериализует объект из Json.
            </summary>
            <param name="json">Строка Json.</param>
            <param name="type">Тип объекта.</param>
            <returns></returns>
        </member>
    </members>
</doc>
